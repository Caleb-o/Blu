// int is a copy type and isn't moved
fn foo(x, y: int) int {
	let z = 10;
	return x + y * z;
}

fn take_and_set(var x: ref int) void {
	x = 10;
}

struct Vec2 {
	x: int,
	y: int,
}

// struct ref turns into a class
// it is also heap allocated
struct ref Person {
	name: string,
	age: int,
}

fn vec2_new(x, y: int) Vec2 {
	// Maybe allow same name identifiers to be passed in without label?
	return Vec2 { x: x, y: y };
}

fn main() {
	var fooret = foo(x: 10, y: 20);
	take_and_set(var x: ref fooret);

	// Struct ref types will automatically be generated with 'new' in C#
	let person = Person(name: "Caleb", age: 23);
}