// Wrapper object over a file, so it can be used like an object
// This is not meant to be created manually, but by the `open_file`
// function below
// Offers read, write and close methods for ease of use
let final File = object(path, mode, handle) {
  let final read () = builtin.io.read_file(handle);
  let final write content = builtin.io.write_file(handle, content);
  let final close () = builtin.io.close(handle);
};

// Open a file and create a file object
// Returns nil if no file could be created
let final open_file path mode =
  if mode == 0 or mode == 4 or builtin.io.exists(path)
  then File(path, mode, builtin.io.open(path, mode))
  else nil;


export File, open_file;